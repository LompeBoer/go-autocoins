name: "release"

on:
  push:
    tags:
      - '*'

jobs:

  build_release:
    name: build_release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: build
      run: make build
    - name: version
      run: echo "::set-output name=version::$(./bin/go-autcoins --version)"
      id: version
    - name: build artifacts
      run: make build-linux && make build-windows && make build-darwin

    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/go-autocoins.linux-amd64.tar.gz
        asset_name: go-autocoins.linux-amd64.tar.gz
        asset_content_type: application/gzip
    - name: upload darwin artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/go-autocoins.darwin-amd64.tar.gz
        asset_name: go-autocoins.darwin-amd64.tar.gz
        asset_content_type: application/gzip
    - name: upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/go-autocoins.windows-amd64.zip
        asset_name: go-autocoins.windows-amd64.zip
        asset_content_type: application/zip
    - name: upload config file
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./autoCoins.json
        asset_name: autoCoins.json
        asset_content_type: application/json